<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Title.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>